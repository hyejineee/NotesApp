
plugins{
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.hyejineee.notes"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions{
        unitTests.all {
            useJUnitPlatform()
        }

        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    buildFeatures{
        dataBinding = true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'


    //test
    testImplementation 'junit:junit:4.+'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation "android.arch.core:core-testing:1.1.1"

    testImplementation 'io.kotest.extensions:kotest-extensions-robolectric:0.4.0'
    testImplementation "org.robolectric:robolectric:4.6.1"
    testImplementation 'org.mockito:mockito-inline:2.21.0'



    //android test
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
//    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'


    //kotest
    testImplementation  'io.kotest:kotest-runner-junit5:4.6.2'

    //mockk
    def mockk_version = "1.12.0"
    testImplementation "io.mockk:mockk:$mockk_version"

    //viewModel ktx
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1'

    // viewModels()를 사용하기 위한 의존성 - why??
    implementation 'androidx.activity:activity-ktx:1.3.1'
//    implementation 'androidx.fragment:fragment-ktx:1.3.6'

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"


}